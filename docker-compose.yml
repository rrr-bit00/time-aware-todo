services:
  frontend:
    container_name: react-app
    build:
      context: "./frontend"
      dockerfile: "Dockerfile"
    ports:
      - 5173:5173
    volumes:
    # コードの同期
     - ./frontend:/front_app
    # node_modulesの保存先を用意し、マウントする
     - node_modules_copy:/front_app/node_modules

  backend:
    container_name: fastapi-app
    build:
      context: "./backend"
      dockerfile: "Dockerfile"
    ports:
      - 8001:8001
    volumes:
      - ./backend:/back_app
    # rootの.envをbackendコンテナにも渡す
    env_file:
      - ./.env
    depends_on:
      - db:
       # dbの初期化が完了してから雪像するために必要
          condition: service_healthy

  db:
    image: postgres:17
    container_name: postgres-db
    ports:
      - 5433:5432
    # データベースの永続化
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # dbに接続可能になったか確認する
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

volumes:
  node_modules_copy:
  db-data:
